import React, { useState, useEffect } from 'react';
import { View, Text, ScrollView, TouchableOpacity, TextInput } from 'react-native';
import { useRouter } from 'expo-router';
import { model } from './GenerativeAI';
import { useAuth } from '../../context/authContext';

export default function ChatSuggestions({ selectedText, messages }) {
    const router = useRouter();

    const [quickReplies, setQuickReplies] = useState([]);
    const { user } = useAuth();

    // const quickReplies = [
    //     "Hi there!",
    //     "I need some assistance.",
    //     "What's your location?",
    //     "Thanks for your help!",
    //     "Tell me more about your services.",
    // ];

    const handleQuickReply = (text) => {
        // setMessage(text); // Sets the input box with the quick reply text
        selectedText(text)
        setQuickReplies([])
    };


    const fetchQuickReplies = async () => {
        const promptSystem = `your job is to give me atmost 4 quick reply texts based on latest messages of a conversation which will help the user to reply to the messages from the other person, keep it short under 3 words and relavant to the conversation
        and only reply using this JSON schema:

        Recipe = {'textContent': string}
        Return: Array<Recipe>`;

        // const result = await model.startChat({
        //     systemInstruction: promptSystem,
        //     history : [
        //         {
        //             role : "user",
        //             parts : [{text : "Hello how are you"}]
        //         },
        //         {
        //             role : "user2",
        //             parts : [{text : "I am good how are you"}]
        //         },
        //         {
        //             role : "user",
        //             parts : [{text : "I am good as well, thank you for"}]
        //         }
        //     ]
        // });

        const result = await model.generateContent(
            {
                systemInstruction: promptSystem,
                contents: [{
                    role: 'user',
                    parts: [{ text: "This is the conversation : " + JSON.stringify(messages.filter((message) => user?.userId != message.userId)) }]
                },]
            }
        );

        let res = result.response.text().replace('```json', "").replace("```", "").trim()
        console.log(res, "Generated by AI");
        setQuickReplies(JSON.parse(res))
    };
    console.log(messages[messages.length - 1], "messages[-1]")

    useEffect(() => {
        if (messages[messages.length - 1]?.userId != user.userId) {
            fetchQuickReplies(); // Fetch suggestions when the component mounts or when needed
        }
    }, [messages]);

    // console.log(users, "USERS")
    return (
        <View className="px-4">
            <ScrollView horizontal showsHorizontalScrollIndicator={false} className="mb-2">

                {quickReplies.map((reply, index) => (
                    <View className="rounded-full" key={index}>
                        <TouchableOpacity
                            style={{ backgroundColor: 'blue', paddingHorizontal: 10, paddingVertical: 2, marginRight: 2, borderRadius: 10 }}
                            // className="bg-blue-600 px-4 py-2 mr-2 rounded-full"
                            // style={tailwind('bg-blue-600 px-4 py-2 mr-2 rounded-full')}
                            onPress={() => handleQuickReply(reply.textContent)}
                        >
                            <Text className="text-white">{reply.textContent}</Text>
                        </TouchableOpacity>
                    </View>
                ))}
            </ScrollView>
        </View>
    )
}